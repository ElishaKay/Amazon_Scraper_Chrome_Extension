  Blog.aggregate([
            { $sample: { size: limit } },
            { $match: { _id: { $ne: _id }, hidden: false, search_keyword: search_keyword } } 
          ])
            .populate('postedBy', '_id name username profile')
            .sort({ total_ratings: -1 })
            .skip(skip)
            .limit(limit)
            .select('title slug autoGenerated product_imgurl mdesc postedBy createdAt updatedAt')
            .exec((err, blogs) => {
                if (err) {
                    return res.status(400).json({
                        error: 'Blogs not found'
                    });
                }
                console.log('blogs: ', blogs)
                res.json(blogs);
            });


v2

// Get the count of all posts
        Blog.countDocuments({ _id: { $ne: _id }, hidden: false, search_keyword: search_keyword }).exec(function (err, count) {
          console.log('count:', count);
          // Get a random entry
          let skip = Math.floor(Math.random() * count)
          console.log('skip: ', skip)

          // Again query all users but only fetch one offset by our random #
           Blog.find({ _id: { $ne: _id }, hidden: false, search_keyword: search_keyword })
            .populate('postedBy', '_id name username profile')
            
            .populate({
              path: 'postedBy',
              select: '_id name username profile',
              options: {
                skip: skip,
                sort: { createdAt: -1 },
                limit: limit
              }
            })
            .select('title slug autoGenerated product_imgurl mdesc postedBy createdAt updatedAt')
            .exec((err, blogs) => {
                if (err) {
                    return res.status(400).json({
                        error: 'Blogs not found'
                    });
                }
                console.log('blogs: ', blogs)
                res.json(blogs);
            });
        })


v3 extras

          // // Again query all users but only fetch one offset by our random #
          //  Blog.find({ _id: { $ne: _id }, hidden: false, search_keyword: search_keyword })    
          //   .populate({
          //     path: 'postedBy',
          //     select: '_id name username profile',
          //     options: {
          //       skip: skip,
          //       sort: { createdAt: -1 },
          //       limit: limit
          //     }
          //   })
          //   .select('title slug autoGenerated product_imgurl mdesc postedBy createdAt updatedAt')
          //   .exec((err, blogs) => {
          //       if (err) {
          //           return res.status(400).json({
          //               error: 'Blogs not found'
          //           });
          //       }
          //       console.log('blogs: ', blogs)
          //       res.json(blogs);